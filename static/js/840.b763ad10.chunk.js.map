{"version":3,"file":"static/js/840.b763ad10.chunk.js","mappings":"uPAEaA,EAAUC,EAAAA,GAAAA,OAAH,gEAKPC,EAAOD,EAAAA,GAAAA,IAAH,oHAOJE,EAAWF,EAAAA,GAAAA,IAAH,0EAKRG,EAAiBH,EAAAA,GAAAA,IAAH,2DAIdI,EAAQJ,EAAAA,GAAAA,GAAH,4C,SCkFlB,EAhGqB,WAAO,IAAD,IACjBK,GAAYC,EAAAA,EAAAA,MAAZD,QAGR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MA+BjB,IA7BAC,EAAAA,EAAAA,YAAU,WACRC,MAAM,wCAAD,OAC4BR,EAD5B,6DAEFS,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,KAAKG,QAAQC,OACbJ,MACC,YAOO,IANLK,EAMI,EANJA,MACAC,EAKI,EALJA,SACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEAf,EAAgB,CACdU,MAAAA,EACAC,SAAAA,EACAC,aAAAA,EACAC,OAAAA,EACAC,YAAAA,EACAC,aAAAA,GAEH,IAEFC,OAAM,SAAAC,GACLC,MAAMD,EACP,GACJ,GAAE,CAACrB,IAECG,EAAL,CAGA,IAAQW,EACNX,EADMW,MAAOC,EACbZ,EADaY,SAAUC,EACvBb,EADuBa,aAAcC,EACrCd,EADqCc,OAAQC,EAC7Cf,EAD6Ce,YAAaC,EAC1DhB,EAD0DgB,aAEtDI,EAAQ,oBAAGlB,EAASmB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UASzC,OACE,iCACE,4BACE,SAAC/B,EAAD,CAASgC,KAAK,SAAd,UACE,SAAC,KAAD,CAAMC,GAAIJ,EAAV,wBAGF,UAAC3B,EAAD,YACE,gBACEgC,IAAG,6CAAwCV,GAC3CW,IAAI,MAEN,UAAChC,EAAD,YACE,0BACGiB,EADH,KApBU,WAClB,GAAIK,EAEF,OADaA,EAAaW,MAAM,EAAG,EAGtC,CAgBqBC,GADZ,QAGA,oCAAYf,EAAagB,QAAQ,OACjC,sCACA,uBAAIjB,KACJ,oCACA,uBAAIE,EAAOgB,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,iBAI/C,UAACtC,EAAD,YACE,oDACA,2BACE,SAACC,EAAD,WACE,SAAC,KAAD,CAAM4B,GAAG,OAAOH,MAAOnB,EAASmB,MAAhC,qBAIF,SAACzB,EAAD,WACE,SAAC,KAAD,CAAM4B,GAAG,UAAUH,MAAOnB,EAASmB,MAAnC,8BAMN,SAAC,EAAAa,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QApDL,CAwDF,C","sources":["pages/MovieDetails.styled.js","pages/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BackBTN = styled.button`\ncursor: pointer:\n  padding: 5px 10px;\n`;\n\nexport const Info = styled.div`\n  margin-top: 5px;\n  padding: 5px 0;\n  display: flex;\n  border-bottom: 1px solid black;\n`;\n\nexport const InfoList = styled.div`\n  padding-left: 10px;\n  flex-direction: column;\n`;\n\nexport const AdditionalInfo = styled.div`\n  border-bottom: 1px solid black;\n`;\n\nexport const Links = styled.li`\n  margin-top: 5px;\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  BackBTN,\n  Info,\n  InfoList,\n  AdditionalInfo,\n  Links,\n} from './MovieDetails.styled';\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  // console.log(movieId);\n\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetch(`\nhttps://api.themoviedb.org/3/movie/${movieId}?api_key=a0d13cdb64d238d9f40292183aa77574&language=en-US`)\n      .then(response => response.json())\n      .then(console.log())\n      .then(\n        ({\n          title,\n          overview,\n          vote_average,\n          genres,\n          poster_path,\n          release_date,\n        }) => {\n          setMovieDetails({\n            title,\n            overview,\n            vote_average,\n            genres,\n            poster_path,\n            release_date,\n          });\n        }\n      )\n      .catch(error => {\n        alert(error);\n      });\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return;\n  }\n  const { title, overview, vote_average, genres, poster_path, release_date } =\n    movieDetails;\n  const backLink = location.state?.from ?? '/movies';\n\n  const dateRelease = () => {\n    if (release_date) {\n      const year = release_date.slice(0, 4);\n      return year;\n    }\n  };\n\n  return (\n    <>\n      <div>\n        <BackBTN type=\"button\">\n          <Link to={backLink}>Go back</Link>\n        </BackBTN>\n\n        <Info>\n          <img\n            src={`https://www.themoviedb.org/t/p/w500${poster_path}`}\n            alt=\"\"\n          ></img>\n          <InfoList>\n            <h1>\n              {title} ({dateRelease()})\n            </h1>\n            <p>Rating: {vote_average.toFixed(1)}</p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <p>{genres.map(genre => genre.name).join(' ')}</p>\n          </InfoList>\n        </Info>\n      </div>\n      <AdditionalInfo>\n        <h4>Additional information</h4>\n        <ul>\n          <Links>\n            <Link to=\"cast\" state={location.state}>\n              Cast\n            </Link>\n          </Links>\n          <Links>\n            <Link to=\"reviews\" state={location.state}>\n              Reviews\n            </Link>\n          </Links>\n        </ul>\n      </AdditionalInfo>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BackBTN","styled","Info","InfoList","AdditionalInfo","Links","movieId","useParams","useState","movieDetails","setMovieDetails","location","useLocation","useEffect","fetch","then","response","json","console","log","title","overview","vote_average","genres","poster_path","release_date","catch","error","alert","backLink","state","from","type","to","src","alt","slice","dateRelease","toFixed","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}