{"version":3,"file":"static/js/884.3be0244d.chunk.js","mappings":"8LA4FA,UAzFqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QAGR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MA+BjB,IA7BAC,EAAAA,EAAAA,YAAU,WACRC,MAAM,wCAAD,OAC4BR,EAD5B,6DAEFS,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,KAAKG,QAAQC,OACbJ,MACC,YAOO,IANLK,EAMI,EANJA,MACAC,EAKI,EALJA,SACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEAf,EAAgB,CACdU,MAAAA,EACAC,SAAAA,EACAC,aAAAA,EACAC,OAAAA,EACAC,YAAAA,EACAC,aAAAA,GAEH,IAEFC,OAAM,SAAAC,GACLC,MAAMD,EACP,GACJ,GAAE,CAACrB,IAECG,EAAL,CAGA,IAAQW,EACNX,EADMW,MAAOC,EACbZ,EADaY,SAAUC,EACvBb,EADuBa,aAAcC,EACrCd,EADqCc,OAAQC,EAC7Cf,EAD6Ce,YAAaC,EAC1DhB,EAD0DgB,aAEtDI,EAAQ,oBAAGlB,EAASmB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UASzC,OACE,iCACE,4BACE,SAAC,KAAD,CAAMC,GAAIH,EAAV,sBACA,gBACEI,IAAG,6CAAwCT,GAC3CU,IAAI,MAEN,0BACGd,EADH,KAfc,WAClB,GAAIK,EAEF,OADaA,EAAaU,MAAM,EAAG,EAGtC,CAWiBC,GADZ,QAGA,oCAAYd,EAAae,QAAQ,OACjC,sCACA,uBAAIhB,KACJ,oCACA,uBAAIE,EAAOe,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,WAE3C,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMT,GAAG,OAAOF,MAAOnB,EAASmB,MAAhC,qBAIF,yBACE,SAAC,KAAD,CAAME,GAAG,UAAUF,MAAOnB,EAASmB,MAAnC,2BAKJ,SAAC,EAAAY,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,WA5CP,CAiDF,C","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  // console.log(movieId);\n\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetch(`\nhttps://api.themoviedb.org/3/movie/${movieId}?api_key=a0d13cdb64d238d9f40292183aa77574&language=en-US`)\n      .then(response => response.json())\n      .then(console.log())\n      .then(\n        ({\n          title,\n          overview,\n          vote_average,\n          genres,\n          poster_path,\n          release_date,\n        }) => {\n          setMovieDetails({\n            title,\n            overview,\n            vote_average,\n            genres,\n            poster_path,\n            release_date,\n          });\n        }\n      )\n      .catch(error => {\n        alert(error);\n      });\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return;\n  }\n  const { title, overview, vote_average, genres, poster_path, release_date } =\n    movieDetails;\n  const backLink = location.state?.from ?? '/movies';\n\n  const dateRelease = () => {\n    if (release_date) {\n      const year = release_date.slice(0, 4);\n      return year;\n    }\n  };\n\n  return (\n    <>\n      <div>\n        <Link to={backLink}>Go back</Link>\n        <img\n          src={`https://www.themoviedb.org/t/p/w500${poster_path}`}\n          alt=\"\"\n        ></img>\n        <h1>\n          {title} ({dateRelease()})\n        </h1>\n        <p>Rating: {vote_average.toFixed(1)}</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres.map(genre => genre.name).join(' ')}</p>\n      </div>\n      <div>\n        <h4>Additional information</h4>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={location.state}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={location.state}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Suspense fallback={null}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","useState","movieDetails","setMovieDetails","location","useLocation","useEffect","fetch","then","response","json","console","log","title","overview","vote_average","genres","poster_path","release_date","catch","error","alert","backLink","state","from","to","src","alt","slice","dateRelease","toFixed","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}